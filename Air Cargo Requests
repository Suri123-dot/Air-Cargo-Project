SQL Challenges

Request 1:
Write a query to display all the passengers (customers) who have travelled in routes 1 to 25.

Request 2:
Write a query to identify the number of passengers and total revenue in business class from the ticket_details table. 

Request 3:
Write a query to display the full name of the customer by extracting the first name and last name from the customer table. 

Request 4:
Write a query to extract the customers who have registered and booked a ticket. Use data from the customer and ticket_details tables. 

Request 5:
Write a query to identify the customerâ€™s first name and last name based on their customer ID and brand (Emirates) from the ticket_details table. 

Request 6:
Write a query to identify the customers who have travelled by Economy Plus class using Group By and Having clause on the passengers_on_flights table. 

Request 7:
Write a query to identify whether the revenue has crossed 450 using the IF clause on the ticket_details table.  

Request 8:
Write a query to find the maximum ticket price for each class using window functions on the ticket_details table. 

Request 9:
For the route ID 4, write a query to view the execution plan of the passengers_on_flights table. 

Request 10:
Write a query to calculate the total price of all tickets booked by a customer across different aircraft IDs using rollup function.

Request 11:
Write a query to create a view with only business class customers along with the brand of airlines.

Request 12:
Write a query to create a stored procedure that extracts all the details from the routes table where the travelled distance is more than 2000 miles. 

Request 13:
Write a query to create a stored procedure that groups the distance travelled by each flight into three categories. The categories are, short distance travel (SDT) for >=0 AND <= 2000 miles, intermediate distance travel (IDT) for >2000 
AND <=6500, and long-distance travel (LDT) for >6500. 

Request 14:
Write a query to extract ticket purchase date, customer ID, class ID and specify if the complimentary services are provided for the specific class using a stored function in stored procedure on the ticket_details table. 
Condition: If the class is Business and Economy Plus, then complimentary services are given as Yes, else it is No. 
